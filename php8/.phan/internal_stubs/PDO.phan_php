<?php
// These stubs were generated by the phan stub generator.
// @phan-stub-for-extension PDO@7.1.10

namespace {
class PDO {

    // constants
    public const PARAM_BOOL = 5;
    public const PARAM_NULL = 0;
    public const PARAM_INT = 1;
    public const PARAM_STR = 2;
    public const PARAM_LOB = 3;
    public const PARAM_STMT = 4;
    public const PARAM_INPUT_OUTPUT = 2147483648;
    public const PARAM_EVT_ALLOC = 0;
    public const PARAM_EVT_FREE = 1;
    public const PARAM_EVT_EXEC_PRE = 2;
    public const PARAM_EVT_EXEC_POST = 3;
    public const PARAM_EVT_FETCH_PRE = 4;
    public const PARAM_EVT_FETCH_POST = 5;
    public const PARAM_EVT_NORMALIZE = 6;
    public const FETCH_LAZY = 1;
    public const FETCH_ASSOC = 2;
    public const FETCH_NUM = 3;
    public const FETCH_BOTH = 4;
    public const FETCH_OBJ = 5;
    public const FETCH_BOUND = 6;
    public const FETCH_COLUMN = 7;
    public const FETCH_CLASS = 8;
    public const FETCH_INTO = 9;
    public const FETCH_FUNC = 10;
    public const FETCH_GROUP = 65536;
    public const FETCH_UNIQUE = 196608;
    public const FETCH_KEY_PAIR = 12;
    public const FETCH_CLASSTYPE = 262144;
    public const FETCH_SERIALIZE = 524288;
    public const FETCH_PROPS_LATE = 1048576;
    public const FETCH_NAMED = 11;
    public const ATTR_AUTOCOMMIT = 0;
    public const ATTR_PREFETCH = 1;
    public const ATTR_TIMEOUT = 2;
    public const ATTR_ERRMODE = 3;
    public const ATTR_SERVER_VERSION = 4;
    public const ATTR_CLIENT_VERSION = 5;
    public const ATTR_SERVER_INFO = 6;
    public const ATTR_CONNECTION_STATUS = 7;
    public const ATTR_CASE = 8;
    public const ATTR_CURSOR_NAME = 9;
    public const ATTR_CURSOR = 10;
    public const ATTR_ORACLE_NULLS = 11;
    public const ATTR_PERSISTENT = 12;
    public const ATTR_STATEMENT_CLASS = 13;
    public const ATTR_FETCH_TABLE_NAMES = 14;
    public const ATTR_FETCH_CATALOG_NAMES = 15;
    public const ATTR_DRIVER_NAME = 16;
    public const ATTR_STRINGIFY_FETCHES = 17;
    public const ATTR_MAX_COLUMN_LEN = 18;
    public const ATTR_EMULATE_PREPARES = 20;
    public const ATTR_DEFAULT_FETCH_MODE = 19;
    public const ERRMODE_SILENT = 0;
    public const ERRMODE_WARNING = 1;
    public const ERRMODE_EXCEPTION = 2;
    public const CASE_NATURAL = 0;
    public const CASE_LOWER = 2;
    public const CASE_UPPER = 1;
    public const NULL_NATURAL = 0;
    public const NULL_EMPTY_STRING = 1;
    public const NULL_TO_STRING = 2;
    public const ERR_NONE = '00000';
    public const FETCH_ORI_NEXT = 0;
    public const FETCH_ORI_PRIOR = 1;
    public const FETCH_ORI_FIRST = 2;
    public const FETCH_ORI_LAST = 3;
    public const FETCH_ORI_ABS = 4;
    public const FETCH_ORI_REL = 5;
    public const CURSOR_FWDONLY = 0;
    public const CURSOR_SCROLL = 1;
    public const SQLITE_DETERMINISTIC = 2048;

    // methods
    public function __construct($dsn, $username = NULL, $passwd = NULL, $options = NULL) {}
    public function prepare($statement, $options = NULL) {}
    public function beginTransaction() {}
    public function commit() {}
    public function rollBack() {}
    public function inTransaction() {}
    public function setAttribute($attribute, $value) {}
    public function exec($query) {}
    public function query() {}
    public function lastInsertId($seqname = NULL) {}
    public function errorCode() {}
    public function errorInfo() {}
    public function getAttribute($attribute) {}
    public function quote($string, $paramtype = NULL) {}
    public function __wakeup() {}
    public function __sleep() {}
    public static function getAvailableDrivers() {}
}

class PDOException extends \RuntimeException {

    // properties
    public $errorinfo;
    public $code;
    public $message;
    public $file;
    public $line;
    public $errorInfo;
}

final class PDORow {
}

class PDOStatement implements \Traversable {

    // properties
    public $querystring;
    public $queryString;

    // methods
    public function execute($bound_input_params = NULL) {}
    public function fetch($how = NULL, $orientation = NULL, $offset = NULL) {}
    public function bindParam($paramno, &$param, $type = NULL, $maxlen = NULL, $driverdata = NULL) {}
    public function bindColumn($column, &$param, $type = NULL, $maxlen = NULL, $driverdata = NULL) {}
    public function bindValue($paramno, $param, $type = NULL) {}
    public function rowCount() {}
    public function fetchColumn($column_number = NULL) {}
    public function fetchAll($how = NULL, $class_name = NULL, $ctor_args = NULL) {}
    public function fetchObject($class_name = NULL, $ctor_args = NULL) {}
    public function errorCode() {}
    public function errorInfo() {}
    public function setAttribute($attribute, $value) {}
    public function getAttribute($attribute) {}
    public function columnCount() {}
    public function getColumnMeta($column) {}
    public function setFetchMode($mode, $params = NULL) {}
    public function nextRowset() {}
    public function closeCursor() {}
    public function debugDumpParams() {}
    public function __wakeup() {}
    public function __sleep() {}
}

function pdo_drivers() {}
}
